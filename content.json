{"meta":{"title":"skywarmer's blog","subtitle":"subtitle goes here","description":"description goes here","author":"wanghongsheng","url":"https://skywarmer.github.io"},"pages":[{"title":"About","date":"2016-09-12T06:22:57.000Z","updated":"2016-09-12T06:22:57.000Z","comments":true,"path":"about/index.html","permalink":"https://skywarmer.github.io/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2016-09-12T06:22:57.000Z","updated":"2016-09-12T06:22:57.000Z","comments":true,"path":"categories/index.html","permalink":"https://skywarmer.github.io/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2016-09-12T06:22:57.000Z","updated":"2016-09-12T06:22:57.000Z","comments":true,"path":"tags/index.html","permalink":"https://skywarmer.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"hello2","slug":"hello2","date":"2016-09-12T06:12:14.000Z","updated":"2016-09-12T06:40:28.000Z","comments":true,"path":"2016/09/12/hello2/","link":"","permalink":"https://skywarmer.github.io/2016/09/12/hello2/","excerpt":"","text":"","categories":[],"tags":[],"keywords":[]},{"title":"Hello World","slug":"hello-world","date":"2016-09-12T06:09:41.000Z","updated":"2016-09-12T06:09:41.000Z","comments":true,"path":"2016/09/12/hello-world/","link":"","permalink":"https://skywarmer.github.io/2016/09/12/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]},{"title":"Life is hard","slug":"Life-is-hard","date":"2016-09-12T03:29:19.000Z","updated":"2016-09-12T06:09:37.000Z","comments":true,"path":"2016/09/12/Life-is-hard/","link":"","permalink":"https://skywarmer.github.io/2016/09/12/Life-is-hard/","excerpt":"","text":"Life is so hard out there.May God bless you!","categories":[{"name":"生活","slug":"life","permalink":"https://skywarmer.github.io/categories/life/"}],"tags":[],"keywords":[{"name":"生活","slug":"life","permalink":"https://skywarmer.github.io/categories/life/"}]},{"title":"将命令行输出放在剪切板上","slug":"将命令行输出放在剪切板上","date":"2016-09-12T03:15:06.000Z","updated":"2016-09-12T06:09:44.000Z","comments":true,"path":"2016/09/12/将命令行输出放在剪切板上/","link":"","permalink":"https://skywarmer.github.io/2016/09/12/将命令行输出放在剪切板上/","excerpt":"","text":"为什么要这么做？ 直接把命令的输出（比如grep/awk/sed/find或是你的程序输出结果）放到剪切板上，这么就可以在IM中CTRL + V粘贴后发出去。 避免操作的繁琐和跳跃：把结果输出到文件、用文本编辑器打开文件、选中文本、CTRL + C。 通过命令将文件内容拷贝到剪切板，以避免拷贝错误、操作的跳跃（跳到文件编辑器） Windows下 使用系统自带的clip命令。 位于C:\\Windows\\system32\\clip.exe。示例： 1234$ echo Hello | clip #将字符串Hello放入Windows剪贴板$ dir | clip #将dir命令的输出放入Windows剪切板$ clip &lt; README.TXT #将README.TXT的文本放入Windows剪切板$ echo | clip # 将一个空行放入Windows剪切板，即清空Windows剪切板 Linux下 使用xsel命令。 参见笔记:How do I pipe terminal standard output (stdout) to the clipboard? 示例： 1234$ cat README.TXT | xsel #将输出放在剪切板$ cat README.TXT | xsel -b # 如有问题，可以试试-b选项$ xsel &lt; README.TXT # 将readme.txt的文本放入剪贴板$ xsel -c # 清空剪贴板 Mac下 使用 pbcopy 命令。 # 对应有个pbpaste命令。 示例： 12$ echo ‘Hello World!’ | pbcopy #将字符串“Hello World！”放入剪切板$ pbpaste #将剪切板中内容输出到终端","categories":[{"name":"iOS","slug":"ios","permalink":"https://skywarmer.github.io/categories/ios/"}],"tags":[],"keywords":[{"name":"iOS","slug":"ios","permalink":"https://skywarmer.github.io/categories/ios/"}]}]}